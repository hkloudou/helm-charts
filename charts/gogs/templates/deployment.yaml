apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gogs.fullname" . }}
  labels:
    {{- include "gogs.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "gogs.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "gogs.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "gogs.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          env:
          # - name: DEMO_GREETING
          #   value: "Hello from the environment"
          # - name: DEMO_FAREWELL
          #   value: "Such a sweet sorrow"
          {{- if .Values.cifs.enabled }}
            {{- toYaml .Values.cifs.env | nindent 10 }}
          {{- else if .Values.backup.enabled }}
            {{- toYaml .Values.backup.env | nindent 10 }}
          {{- end -}}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /data
            {{- if .Values.cifs.enabled }}
            - name: backup
              mountPath: /backup
              subPath: {{ .Values.cifs.subPath }}
            {{- else if .Values.cifs.enabled }}
            - name: backup
              mountPath: /backup
              subPath: {{ .Values.backup.subPath }}
            {{- end -}}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        # - name: config
        #   configMap:
        #     name: {{ template "gogs.fullname" . }}-config
        - name: data
      {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            {{- if .Values.persistence.existingClaim }}
            claimName: {{ .Values.persistence.existingClaim }}
            {{- else }}
            claimName: {{ template "gogs.fullname" . }}-pvc
            {{- end -}}
      {{- else }}
          emptyDir: {}
      {{- end -}}
      {{- if .Values.cifs.enabled }}
        - name: backup
          flexVolume:
            driver: "fstab/cifs"
            fsType: "cifs"
            secretRef:
              name: {{ .Values.cifs.secretName | quote }}
            options:
              networkPath: {{ .Values.cifs.networkPath | quote }}
              mountOptions: {{ .Values.cifs.mountOptions | quote }}
      {{- else if .Values.backup.enabled }}
        - name: backup
          persistentVolumeClaim:
            claimName: {{ .Values.backup.claimName }}
      {{- end -}}