{{- $fullName := include "alidns-webhook.fullname" . -}}

{{- if .Values.setClusterIssuers -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{$fullName}}-alidns-secret
  namespace: {{ .Values.certManager.namespace | quote}}
type: Opaque
stringData:
  accessKeyId: {{.Values.accessKeyId | quote}}
  accessKeySecret: {{.Values.accessKeySecret | quote}}
---
apiVersion: certmanager.k8s.io/v1alpha1
kind: ClusterIssuer
metadata:
  name: {{$fullName}}-issuer-prod
  namespace: {{ .Values.certManager.namespace | quote}}
spec:
  acme:
    email: admin@zito.info
    server: https://acme-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: {{$fullName}}-issuer-prod
    solvers:
    - dns01:
        webhook:
          groupName: acme.k8s.zito
          solverName: alidns
          config:
            region: ""
            ingressClass: istio
            accessKeySecretRef:
              name: {{$fullName}}-alidns-secret
              key: accessKeyId
            secretKeySecretRef:
              name: {{$fullName}}-alidns-secret
              key: accessKeySecret
---
apiVersion: certmanager.k8s.io/v1alpha1
kind: ClusterIssuer
metadata:
  name: {{$fullName}}-issuer-staging
  namespace: {{ .Values.certManager.namespace | quote}}
spec:
  acme:
    email: admin@zito.info
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: {{$fullName}}-issuer-staging
    solvers:
    - dns01:
        webhook:
          groupName: acme.k8s.zito
          solverName: alidns
          config:
            region: ""
            ingressClass: {{ .Values.certManager.ingressClass | quote}}
            accessKeySecretRef:
              name: alibaba-api-dns-secret
              key: accessKeyId
            secretKeySecretRef:
              name: alibaba-api-dns-secret
              key: accessKeySecret
{{- end -}}